includes:
    - phar://phpstan.phar/conf/config.levelmax.neon
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/phpstan/phpstan-deprecation-rules/rules.neon
    - vendor/phpstan/phpstan-strict-rules/rules.neon
    - vendor/ekino/phpstan-banned-code/extension.neon
    - vendor/thecodingmachine/phpstan-strict-rules/phpstan-strict-rules.neon

rules:
    - Ergebnis\PHPStan\Rules\Expressions\NoEvalRule
    - Ergebnis\PHPStan\Rules\Methods\FinalInAbstractClassRule
    - Ergebnis\PHPStan\Rules\Methods\PrivateInFinalClassRule

services:
    -
        class: Ergebnis\PHPStan\Rules\Classes\FinalRule
        arguments:
            allowAbstractClasses: true
            classesNotRequiredToBeAbstractOrFinal: []
        tags:
            - phpstan.rules.rule
    -
        class: Ergebnis\PHPStan\Rules\Classes\PHPUnit\Framework\TestCaseWithSuffixRule
        tags:
            - phpstan.rules.rule

parameters:
    tipsOfTheDay: false
    bootstrapFiles:
        - test/constants.php
    paths:
        - bin/
        - bin/paratest
        - src/
        - test/
    excludes_analyse:
        - test/fixtures/*
    ignoreErrors:
        # Allowed forbidden calls
        -
            message: "#^Should not use node with type \"Expr_Exit\", please change the code\\.$#"
            count: 2
            path: bin/paratest
        -
            message: "#^Should not use node with type \"Stmt_Echo\", please change the code\\.$#"
            count: 1
            path: bin/paratest
        -
            message: "#^Should not use node with type \"Expr_Exit\", please change the code\\.$#"
            count: 1
            path: bin/phpunit-sqlite-wrapper.php
        -
            message: "#^Should not use node with type \"Stmt_Echo\", please change the code\\.$#"
            count: 4
            path: bin/phpunit-wrapper.php
        -
            message: "#^Should not use node with type \"Expr_Exit\", please change the code\\.$#"
            count: 3
            path: bin/phpunit-wrapper.php

        # Known fixtures
        -
            message: "#^Should not use function \"proc_open\", please change the code\\.$#"
            count: 1
            path: src/Runners/PHPUnit/Worker/BaseWorker.php
        -
            message: "#^Should not use function \"proc_open\", please change the code\\.$#"
            count: 1
            path: test/Functional/Runners/PHPUnit/WorkerTest.php
    
        # Known errors
        - "#^Variable property access on .+$#"
        - "#^Variable method call on .+$#"
        - "#^.+ has no value type specified in iterable type Symfony\\\\Component\\\\Process\\\\Process\\.$#"
        -
            message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
            count: 2
            path: bin/phpunit-wrapper.php
        -
            message: "#^Construct empty\\(\\) is not allowed\\. Use more strict comparison\\.$#"
            count: 1
            path: src/Logging/JUnit/Writer.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with false will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/excluded-tests/excluded/ExcludedFailingTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertFalse\\(\\) with true will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/FailingTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with false will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/FailingTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertFalse\\(\\) with true will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/StopOnFailureTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with false will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/StopOnFailureTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertFalse\\(\\) with true will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/UnitTestWithClassAnnotationTest.php
        -
            message: "#^Unreachable statement \\- code above always terminates\\.$#"
            count: 1
            path: test/fixtures/failing-tests/UnitTestWithErrorTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertFalse\\(\\) with true will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/failing-tests/UnitTestWithMethodAnnotationsTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertFalse\\(\\) with true will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/slow-tests/LongRunningTest.php
        -
            message: "#^Call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertTrue\\(\\) with false will always evaluate to false\\.$#"
            count: 1
            path: test/fixtures/wrapper-runner-exit-code-tests/FailureTest.php

        # Level 7
        -
            message: "#^Cannot call method fetch\\(\\) on PDOStatement\\|false\\.$#"
            count: 1
            path: bin/phpunit-sqlite-wrapper.php
        -
            message: "#^Method ParaTest\\\\Tests\\\\Unit\\\\Runners\\\\PHPUnit\\\\SuiteLoaderTest\\:\\:getLoadedPaths\\(\\) should return array\\<string\\> but returns array\\<int, int\\|string\\>\\.$#"
            count: 1
            path: test/Unit/Runners/PHPUnit/SuiteLoaderTest.php

        # Level MAX
        -
            message: "#^Parameter \\#1 \\$process of function proc_get_status expects resource, resource\\|null given\\.$#"
            count: 1
            path: src/Runners/PHPUnit/Worker/WrapperWorker.php